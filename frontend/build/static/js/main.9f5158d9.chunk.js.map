{"version":3,"sources":["bg.png","components/header.js","config.js","components/map/index.js","components/home.js","components/map/mapPage.js","context.js","components/auth/index.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","user","className","to","href","onClick","containerStyle","width","height","margin","Map","forwardRef","ref","children","useState","latitude","longitude","pitch","zoom","viewport","setViewPort","id","style","mapboxApiAccessToken","config","mapStyle","onViewportChange","transitionDuration","Home","React","Component","MapPage","mapRef","createRef","markers","componentDidMount","console","log","axios","get","then","response","data","map","place","coordinates","location","class","name","addMapControls","current","getMap","geolocate","mapboxgl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","addControl","NavigationControl","MapboxGeocoder","accessToken","MapboxDirections","this","userContext","createContext","Auth","state","username","password","handleChange","e","target","value","setState","doAuth","preventDefault","path","window","pathname","includes","post","localStorage","setItem","token","props","history","push","catch","err","errorMessage","message","isSignup","Consumer","_","setUser","action","method","htmlFor","type","onChange","Layout","onAuthChange","Provider","exact","component","HomePage","AuthPage","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f5158d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2749d360.png\";","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Header = ({ user }) => (\n  <nav className=\"nav-bar\">\n    <div className=\"container-fluid\">\n      <ul className=\"nav-list\">\n        <li className=\"li\"><Link to=\"/\">Home</Link></li>\n        <li className=\"li\"><Link to=\"/map\">Edu.Points</Link></li>\n      </ul>\n    </div>\n    <div className=\"container-fluid2\">\n      <ul className=\"nav-list2\">\n        {user ?\n          <li className=\"right\">\n            <a href=\"/logout\" onClick={() => {\n              \n            }}>Logout</a>\n          </li> :\n          <Fragment>\n            <li className=\"right\"><Link to=\"/signup\">SignUp</Link></li>\n            <li className=\"right\"><Link to=\"/login\">Login</Link></li>\n          </Fragment>\n        }\n      </ul>\n    </div >\n  </nav >\n)\n\nexport default Header;","export default {\n  token: 'pk.eyJ1IjoidHViYS1rYXNhcCIsImEiOiJjanh1ZTI0YXcwMDM4M2dtbnZ6eXJuOGs2In0.L_TRnX4VuwoBAP4cSCFCVQ'\n}","import React,{ useState, forwardRef } from 'react'\nimport MapGL, {GeolocateControl } from 'react-map-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport config from '../../config';\n\nconst geolocateStyle = {\n  float: 'left',\n  margin: '50px',\n  padding: '10px'\n};\n\nconst containerStyle = {\n  width: '100vw',\n  height: 'calc(100vh - 60px)', \n  margin: 'auto' \n}\n\nconst Map = forwardRef(({ children }, ref) => {\n\n  const [viewport, setViewPort ] = useState({\n    width: '100%',\n    height: '100%',\n    // height: 400,\n    latitude: 13.375739,\n    longitude: 52.509352,\n    pitch: 47.5,\n    // zoom: 2\n    zoom: 5,\n  })\n\n  const _onViewportChange = viewport => setViewPort({...viewport, transitionDuration: 3000 })\n  \n  return (\n    <div id='map' style={containerStyle}>\n      <MapGL\n        ref={ref}\n        {...viewport}\n        mapboxApiAccessToken={config.token}\n        mapStyle=\"mapbox://styles/tuba-kasap/cjxyyrvwr052p1crzfxpiu7iw/draft\"\n        onViewportChange={_onViewportChange}\n         //    width: 400,\n  //   height: 400,\n  //   latitude: 13.375739,\n  //   longitude: 52.509352,\n  //   zoom: 14.5,\n  //   pitch: 47.5,\n  >\n        {children}\n      </MapGL>\n    </div>\n  )\n})\n\nexport default Map","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Map from './map/';\n\nclass Home extends React.Component {\n\n  // state = {\n  //   width: 400,\n  //   height: 400,\n  //   latitude: 13.375739,\n  //   longitude: 52.509352,\n  //   zoom: 14.5,\n  //   pitch: 47.5,\n  //   mapStyle: 'mapbox://styles/tuba-kasap/cjxyyrvwr052p1crzfxpiu7iw/draft'\n  // };\n\n  render() {\n    return (\n      <div id=\"center2\">\n        <Map />\n        <div className=\"home\"  >\n          <h1 className=\"title\">BERcycle</h1>\n          <p className=\"title\">Welcome to BERcycle</p>\n          <Link to=\"/signup\" className=\"btn btn-danger redbut\">Enter your trip.</Link>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Home","import React, {  createRef } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/lib/mapbox-gl-geocoder.css';\nimport MapboxDirections from '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions'\nimport '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css'\nimport { Marker, Popup } from 'react-map-gl';\nimport axios from 'axios';\nimport Map from '.';\n\n\nclass MapPage extends React.Component {\n\n  mapRef = createRef();\n  markers = null\n\n  componentDidMount = () => {\n    console.log(this.mapRef)\n    axios.get('/api/locations').then(response => {\n      console.log({ response })\n      console.log(this.mapRef)\n      this.markers = response.data.map(place => {\n        const { coordinates } = place.location\n        return (\n          <Marker latitude={coordinates.latitude}\n            longitude={coordinates.latitude}>\n              <Popup><div class=\"popup\">${place.name}</div></Popup>\n          </Marker>\n        )\n      })\n    })\n    this.addMapControls()\n  }\n\n  addMapControls = () => {\n    if (!this.mapRef.current) return\n\n    const map = this.mapRef.current.getMap()\n    const geolocate = new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true\n    });\n\n    map.addControl(geolocate, 'bottom-right');\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\n\n    map.addControl(new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl: mapboxgl\n    }), 'top-left');\n\n    map.addControl(new MapboxDirections({\n      accessToken: mapboxgl.accessToken\n    }), 'top-left');\n\n  }\n\n  render() {\n    return (\n      <Map ref={this.mapRef}>\n        {this.markers}         \n      </Map>\n    )\n  }\n}\n\nexport default MapPage;\n","import React from 'react'\n\nconst userContext = React.createContext(null, (user) => {\n\n});\n\nexport default userContext","import React, { Fragment } from 'react';\nimport axios from 'axios';\nimport UserContext from '../../context'\n\n\nexport class Auth extends React.Component {\n\n  state = {\n    user: {\n      name: '',\n      username: '',\n      password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ \n      user: {\n        ...this.state.user,\n        [name]: value\n      } \n     })\n  }\n\n\n  doAuth = (e) => {\n    e.preventDefault()\n    const isSignup = window.location.pathname.includes('signup')\n    const path = isSignup ? 'register' : 'login'\n    axios.post(`/api/${path}`, this.state.user).then(response => {\n      localStorage.setItem('token', response.data.token)\n      this.props.history.push('/map')\n    }).catch(err => {\n      this.setState({ errorMessage: err.response.data.message })\n    })\n  }\n\n  render() {\n    const isSignup = window.location.pathname.includes('signup')\n    const { errorMessage, user } = this.state\n\n    return (\n      <UserContext.Consumer>\n        {({_, setUser }) => (\n          <form id=\"form\" action=\"/signup\" method=\"POST\" className=\"access\">\n            {isSignup &&\n              <Fragment>\n                <label htmlFor=\"name\">Name</label><br />\n                <input type=\"text\" name=\"name\" onChange={this.handleChange} value={user.name}/>\n              </Fragment>\n            }\n\n            <label htmlFor=\"username\">Username</label><br />\n            <input type=\"text\" name=\"username\" onChange={this.handleChange} value={user.username}/>\n\n            <label htmlFor=\"password\">Password</label><br />\n            <input type=\"password\" name=\"password\" onChange={this.handleChange} value={user.password}/>\n\n            {errorMessage && <div className=\"error-message text-danger\">{errorMessage}</div>}\n\n            <div className=\"signupbutton\">\n              <button type=\"submit\" className=\"btn btn-dark\" onClick={this.doAuth}>\n                { isSignup ? 'Sign Up' : 'Login' }\n              </button>\n            </div>\n          </form>\n        )}\n      </UserContext.Consumer>\n    )\n  }\n}\n\nexport default Auth","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Header from './header';\nimport HomePage from './home';\nimport MapPage from './map/mapPage';\nimport AuthPage from './auth';\nimport UserContext from '../context'\n\nclass Layout extends React.Component {\n  state = { user: null }\n  onAuthChange = (user) => {\n    console.log('authed', user)\n    this.setState({ user })\n  }\n  render() {\n    return (\n      <UserContext.Provider value={{\n        ...this.state,\n        onAuthChange: this.onAuthChange\n      }}>\n        <Router>\n          <Header user={this.state.user}/>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/map\" component={MapPage} />\n          <Route path=\"/login\" component={AuthPage} />\n          <Route path=\"/signup\" component={AuthPage} />\n        </Router>\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport default Layout;","import React from 'react';\nimport Layout from './components/layout';\nimport './bg.png';\nimport './styles/style.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}